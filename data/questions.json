[
  {
    "id": "q01_requirements_uncertainty",
    "text": "When faced with uncertain or incomplete requirements, what's your first instinct?",
    "question": "When faced with uncertain or incomplete requirements, what's your first instinct?"
  },
  {
    "id": "q02_time_quality_tradeoff",
    "text": "You have 2 hours to prove a concept will work. A stakeholder asks if you can also make it 'production ready' in that time. How do you respond?",
    "question": "You have 2 hours to prove a concept will work. A stakeholder asks if you can also make it 'production ready' in that time. How do you respond?"
  },
  {
    "id": "q03_success_definition",
    "text": "A prototype successfully demonstrates the core concept but crashes on edge cases. Is this success or failure?",
    "question": "A prototype successfully demonstrates the core concept but crashes on edge cases. Is this success or failure?"
  },
  {
    "id": "q04_scope_boundaries",
    "text": "Describe your approach to building a recommendation system prototype.",
    "question": "Describe your approach to building a recommendation system prototype."
  },
  {
    "id": "q05_quality_tradeoffs",
    "text": "How do you handle code quality when prototyping under time pressure?",
    "question": "How do you handle code quality when prototyping under time pressure?"
  },
  {
    "id": "q06_risk_tolerance",
    "text": "A quick-and-dirty solution works but might break unexpectedly. Do you ship it or refactor it?",
    "question": "A quick-and-dirty solution works but might break unexpectedly. Do you ship it or refactor it?"
  },
  {
    "id": "q07_time_orientation",
    "text": "How do you estimate time for exploratory development work?",
    "question": "How do you estimate time for exploratory development work?"
  },
  {
    "id": "q08_success_definition_detailed",
    "text": "What makes a proof-of-concept successful?",
    "question": "What makes a proof-of-concept successful?"
  },
  {
    "id": "q09_approach_intent",
    "text": "Build a simple movie recommendation system that suggests films based on user ratings. You have 2 hours max. Describe your approach in 3 sentences.",
    "question": "Build a simple movie recommendation system that suggests films based on user ratings. You have 2 hours max. Describe your approach in 3 sentences."
  },
  {
    "id": "q10_exclusion_intent",
    "text": "For the movie recommendation system: What will you NOT include and why?",
    "question": "For the movie recommendation system: What will you NOT include and why?"
  },
  {
    "id": "q11_validation_intent",
    "text": "For the movie recommendation system: How will you know if it worked?",
    "question": "For the movie recommendation system: How will you know if it worked?"
  }
]